The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 5)
    [[0.2, 0.4, 0.6], [0.8, 1.0, 1.2]]

    >>> matrix_divided([[1, 2.2, 3.1], [4, 5, 6]], 5)
    [[0.2, 0.44, 0.62], [0.8, 1.0, 1.2]]

    >>> matrix_divided([[1, float('nan'), 3], [4, 5, 6]], 3)
    [[0.33, nan, 1.0], [1.33, 1.67, 2.0]]
    
    >>> matrix_divided([[1, float('nan'), 3], [4, 5, 6]], float('inf'))
    [[0.0, nan, 0.0], [0.0, 0.0, 0.0]]

    >>> matrix_divided(5) 
    Traceback (most recent call last):
	...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'
    
    >>> matrix_divided()
    Traceback (most recent call last):
	...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
		    
    >>> matrix_divided([1, [4, 5, 6]], 3)
    Traceback (most recent call last):
	...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided("abc", 3)
    Traceback (most recent call last):
	...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 'abc', 3], [4, 5, 6]], 3)
    Traceback (most recent call last):
	...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
	...
    ZeroDivisionError: division by zero

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 'abc')
    Traceback (most recent call last):
	...
    TypeError: div must be a number

    >>> matrix_divided([[1, 2, 3, 4], [4, 5, 6]], 1)
    Traceback (most recent call last):
	...
    TypeError: Each row of the matrix must have the same size
